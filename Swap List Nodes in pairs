There are two wats to solve this problem : 
1) swap the nodes value, this is not allowed.
2) Exchange the nodes and produce resulted list. Time Complexity is O(n) and space complexity is O(1).



/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    public ListNode swapPairs(ListNode list) {
        ListNode prev, cur = list, head = cur, last= null, next;
        while(cur != null) {
            if(cur.next != null ){
                prev= cur;
                cur = cur.next;
                next = cur.next;
                cur.next = prev;
                if(last == null) {
                    head = cur;
                } else last.next = cur;
                prev.next = next;
                last = prev;
                cur = next;
            } else cur = cur.next;
        }
        return head;
    }
}
